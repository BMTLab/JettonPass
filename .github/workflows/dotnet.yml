name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    
    runs-on: 'windows-2016'

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
      env:
        DOTNET_NOLOGO: true
    
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      id: build
      run: dotnet build --no-restore -c Release
      
    - name: Test
      id: test
      run: |
        dotnet test --no-restore --no-build --verbosity normal -c Release
        echo ::set-output name=exit_code::$?
      
    - name: Publish
      id: publish
      if: steps.test.outputs.exit_code == 0
      run: |
        cd scripts
        ./publish.ps1
        echo ::set-output name=exit_code::$?
      shell: 
        pwsh
        
    - name: Upload Publish Artifact
      id: upload_app
      if: steps.publish.outputs.exit_code == 0
      uses: actions/upload-artifact@master
      with:
        name: JettonPass
        path: ${{ github.workspace }}\Publish
                
    - name: Bump version and push tag
      id: tag_version
      if: steps.publish.outputs.exit_code == 0
      uses: mathieudutour/github-tag-action@v5.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        default_bump: patch
        
    - name: Download a single artifact
      id: download
      uses: actions/download-artifact@v2
      with:
        name: JettonPass
        
    - name: Create a GitHub Release
      id: create_release
      if: steps.publish.outputs.exit_code == 0
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
                
    - name: Upload Release Asset
      if: steps.publish.outputs.exit_code == 0
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: JettonPass.zip
        asset_name: JettonPass.zip
        asset_content_type: application/zip
